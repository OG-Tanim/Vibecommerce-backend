generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {

  id           String       @id @default(uuid())

  name         String

  email        String       @unique

  password     String

  role         Role         @default(BUYER)

  isBanned     Boolean      @default(false)

  createdAt    DateTime     @default(now())

  updatedAt    DateTime     @updatedAt

  products     Product[]    @relation("sellerProducts") // one-to-many relation 

  orders       Order[]      @relation("buyerOrders")

} 

model Product {

  id             String        @id @default(uuid())
 
  title          String

  description    String

  price          Float

  category       String

  images         String[]

  imageIds       String[]      //image public ids 

  video          String?       //optional field, can be null or undefined 

  videoId        String?       //video public id

  sellerId       String

  createdAt      DateTime      @default(now())
  
  updatedAt      DateTime      @updatedAt

  seller         User          @relation("sellerProducts", fields: [sellerId], references: [id]) //many to one relation

  orderItems     OrderItem[]   @relation("orderedProduct")  // one-to-many relation where one product can be in multiple order items

}

//order: one per checkout

model Order {

  id               String          @id @default(uuid())

  buyerId          String

  buyer            User            @relation("buyerOrders", fields: [buyerId], references: [id])

  status           OrderStatus     @default(PENDING)

  paymentMethod    PaymentMethod

  shippingInfo     String

  createrAt        DateTime        @default(now())

  updatedAt        DateTime        @updatedAt

  items            OrderItem[]     @relation("orderItems") //one-to-many relation 

}


//orderItem: each item in the cart (many per order)

model OrderItem {

  id            String       @id @default(uuid())

  orderId       String

  productId     String

  quantity      Int 

  price         Float

  order         Order        @relation("orderItems", fields: [orderId], references: [id])

  product       Product      @relation("orderedProduct", fields: [productId], references: [id])
}

enum Role {
  ADMIN
  BUYER
  SELLER
}

enum OrderStatus {
  PENDING
  PROCESSING
  OUT_FOR_DELIVERY
  COMPLETED 
  CANCELLED
  REJECTED
}

enum PaymentMethod {
  CASH_ON_DELIVERY
  BKASH
}